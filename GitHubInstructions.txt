
## Using an Access Token for the first time

Follow the instructions on Github to [Create an Access Token in Github](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)

### Configure Git to use the osxkeychain

By default, git credentials are not cached so you need to tell Git if you want to avoid having to provide them each time Github requires you to authenticate. On Mac, Git comes with an “osxkeychain” mode, which caches credentials in the secure keychain that’s attached to your system account.

You can tell Git you want to store credentials in the osxkeychain by running the following:-

```sh git config --global credential.helper osxkeychain
```

### Add your access token to the osxkeychain

Now issue a command to interract with Github which requires authentication, eg. `git clone` or `git pull`. When you are prompted to supply your _Password for 'https://username@github.com':_ you enter your access token instead. Your token should now get cached in the osxkeychain automatically.

```sh
$ git clone https://github.com/username/repo.git

Cloning into 'repo'...
Username for 'https://github.com': your_github_username
Password for 'https://username@github.com': your_access_token
```

---

## Updating an existing Access Token
 
### Regenerate token on Github

If your existing token has expired, or been revoked, or you are on a new machine and do not have access to the existing token then you can regerate a new one in the Github console `Settings` -> `Developer settings` -> `Personal access tokens`.

### Remove an existing token from your Mac keychain

You can check if you have an existing password or token stored in the `osxkeychain` using the following command.

```bash
$ security find-internet-password -l github.com
```

If this returns a result you can then delete it using the following.

```bash
$ security delete-internet-password -l github.com
```

You should now be prompted for your Github credentials when attempting a `git pull/clone/push` etc and your token should automatically get stored in the `osxkeychain`. If subsequent calls to Github repeatedly prompt you for your credentials then likely the `credential.helper` is not set - see next section. 

---

## Troubleshooting

If no entry for Github was found in the key chain (`security find-internet-password -l github.com`) then see if you can interract with Github by doing something like a `git clone` or `git pull`.

```sh
$ git pull

remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/user/repo.git/'
```

If authentication fails and you are not prompted to enter your credentials, like in the above example, or you are repeatedly challenged by Github for your credentials, then check if you have the `credential.helper` set.

```sh
git config --global credential.helper
```

If not, or it is set to something other than `osxkeychain`, then update/set it.

```sh
git config --global --unset credential.helper
git config --global credential.helper osxkeychain
```

Then try again and you should now be prompted for your credentials.

```sh
$ git clone https://github.com/username/repo.git

Cloning into 'repo'...
Username for 'https://github.com': your_github_username
Password for 'https://username@github.com': your_access_token
```

Ensure you provide your access token rather than password when prompted.
